# 简化版本 - 使用固定IP避免DNS问题

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      milvus-net:
        ipv4_address: 172.20.0.2

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "9001:9001"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      milvus-net:
        ipv4_address: 172.20.0.3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.5.11
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      # 使用IP地址而不是主机名
      ETCD_ENDPOINTS: 172.20.0.2:2379
      MINIO_ADDRESS: 172.20.0.3:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
      - ./milvus.yaml:/milvus/configs/milvus.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      milvus-net:
        ipv4_address: 172.20.0.4

  # 安全初始化服务
  security-init:
    container_name: milvus-security-init
    image: python:3.9-slim
    volumes:
      - ./secure_init.py:/secure_init.py
      - .:/app
    working_dir: /app
    environment:
      - MILVUS_HOST=172.20.0.4  # 使用Milvus的IP
      - MILVUS_PORT=19530
    command: >
      bash -c "
        echo '🔒 开始安全初始化...' &&
        pip install pymilvus &&
        python /secure_init.py &&
        echo '✅ 安全初始化完成'
      "
    depends_on:
      standalone:
        condition: service_healthy
    restart: "no"
    networks:
      milvus-net:
        ipv4_address: 172.20.0.5

# 使用自定义网络和固定IP段
networks:
  milvus-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1